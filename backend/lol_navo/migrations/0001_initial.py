# Generated by Django 5.2.7 on 2025-10-26 02:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('champion_name', models.CharField(max_length=16)),
                ('champion_role', models.CharField(max_length=20)),
                ('champion_description', models.CharField(max_length=255)),
                ('champion_winrate', models.FloatField()),
                ('champion_banrate', models.FloatField()),
                ('champion_pickrate', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(verbose_name=20)),
                ('item_value', models.PositiveSmallIntegerField()),
                ('item_description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('duration', models.DurationField()),
                ('winner_team', models.PositiveSmallIntegerField(choices=[(100, 'Blue'), (200, 'Red')])),
                ('time_lane', models.CharField(max_length=100)),
                ('gold_diff', models.PositiveBigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Rune',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('rune_name', models.CharField(verbose_name=20)),
                ('rune_value', models.PositiveSmallIntegerField()),
                ('rune_description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Summoner',
            fields=[
                ('puuid', models.CharField(max_length=72, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=16)),
                ('server', models.CharField(max_length=5)),
                ('icon', models.URLField()),
                ('ranked_solo_rank', models.CharField(default='Unranked', max_length=32)),
                ('ranked_flex_rank', models.CharField(default='Unranked', max_length=32)),
                ('ranked_solo_wins', models.PositiveSmallIntegerField(default=0)),
                ('ranked_solo_loses', models.PositiveSmallIntegerField(default=0)),
                ('ranked_flex_wins', models.PositiveSmallIntegerField(default=0)),
                ('ranked_flex_loses', models.PositiveSmallIntegerField(default=0)),
                ('quickplay_wins', models.PositiveSmallIntegerField(default=0)),
                ('quickplay_loses', models.PositiveSmallIntegerField(default=0)),
                ('normal_wins', models.PositiveSmallIntegerField(default=0)),
                ('normal_loses', models.PositiveSmallIntegerField(default=0)),
                ('aram_wins', models.PositiveSmallIntegerField(default=0)),
                ('aram_loses', models.PositiveSmallIntegerField(default=0)),
                ('arena_wins', models.PositiveSmallIntegerField(default=0)),
                ('arena_loses', models.PositiveSmallIntegerField(default=0)),
                ('clash_wins', models.PositiveSmallIntegerField(default=0)),
                ('clash_loses', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MatchSummoners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_order', models.CharField(blank=True, default='', max_length=255)),
                ('cs', models.PositiveIntegerField(default=0)),
                ('wards_used', models.PositiveSmallIntegerField(default=0)),
                ('vision_points', models.PositiveSmallIntegerField(default=0)),
                ('damage_dealt', models.BigIntegerField(default=0)),
                ('damage_received', models.BigIntegerField(default=0)),
                ('damage_healed', models.BigIntegerField(default=0)),
                ('damage_mitigated', models.BigIntegerField(default=0)),
                ('game_type', models.CharField(max_length=16)),
                ('winner', models.BooleanField(default=False)),
                ('ranked_points', models.PositiveBigIntegerField(default=0)),
                ('kills', models.PositiveSmallIntegerField(default=0)),
                ('deaths', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('total_gold', models.PositiveBigIntegerField(default=0)),
                ('champion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lol_navo.champion')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='lol_navo.match')),
                ('summoner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='lol_navo.summoner')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='summoners',
            field=models.ManyToManyField(related_name='matches', through='lol_navo.MatchSummoners', through_fields=('match', 'summoner'), to='lol_navo.summoner'),
        ),
        migrations.CreateModel(
            name='ChampionStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion_point', models.PositiveBigIntegerField(default=0)),
                ('champion_winrate', models.FloatField(default=0.0)),
                ('champion_kda', models.FloatField(default=0.0)),
                ('champion_games', models.PositiveIntegerField(default=0)),
                ('champion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summoner_stats', to='lol_navo.champion')),
                ('summoner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='champion_stats', to='lol_navo.summoner')),
            ],
        ),
        migrations.AddField(
            model_name='champion',
            name='summoners',
            field=models.ManyToManyField(related_name='champions', through='lol_navo.ChampionStat', through_fields=('champion', 'summoner'), to='lol_navo.summoner'),
        ),
        migrations.AddIndex(
            model_name='matchsummoners',
            index=models.Index(fields=['match'], name='lol_navo_ma_match_i_a43a6d_idx'),
        ),
        migrations.AddIndex(
            model_name='matchsummoners',
            index=models.Index(fields=['summoner'], name='lol_navo_ma_summone_608e1a_idx'),
        ),
        migrations.AddIndex(
            model_name='matchsummoners',
            index=models.Index(fields=['match', 'summoner'], name='lol_navo_ma_match_i_e32db8_idx'),
        ),
        migrations.AddConstraint(
            model_name='matchsummoners',
            constraint=models.UniqueConstraint(fields=('match', 'summoner'), name='uniq_match_summoner'),
        ),
        migrations.AddIndex(
            model_name='championstat',
            index=models.Index(fields=['summoner'], name='lol_navo_ch_summone_7dee11_idx'),
        ),
        migrations.AddIndex(
            model_name='championstat',
            index=models.Index(fields=['champion'], name='lol_navo_ch_champio_e7a704_idx'),
        ),
        migrations.AddIndex(
            model_name='championstat',
            index=models.Index(fields=['summoner', 'champion'], name='lol_navo_ch_summone_3c06f4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='championstat',
            unique_together={('summoner', 'champion')},
        ),
    ]
